// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectManagementTool.Context;

#nullable disable

namespace ProjectManagementTool.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20240825023023_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectManagementTool.Domain.Model.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JwtUserToken")
                        .HasColumnType("text");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeName")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ProjectManagementTool.Domain.Model.Manager", b =>
                {
                    b.Property<Guid>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JwtUserToken")
                        .HasColumnType("text");

                    b.Property<string>("ManagerName")
                        .HasColumnType("text");

                    b.Property<string>("ManagerPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ManagerId");

                    b.HasIndex("ManagerName")
                        .IsUnique();

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("ProjectManagementTool.Domain.Model.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssigningTeamLeaderId")
                        .HasColumnType("uuid");

                    b.Property<int?>("CompletedTasks")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedManager")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NumberOfTasks")
                        .HasColumnType("integer");

                    b.HasKey("ProjectId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Project");
                });

            modelBuilder.Entity("ProjectManagementTool.Domain.Model.Tasks", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssigningEmployeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedTeamLeader")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("TaskName")
                        .HasColumnType("text");

                    b.Property<int?>("TaskStatus")
                        .HasColumnType("integer");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskName")
                        .IsUnique();

                    b.ToTable("Task");
                });

            modelBuilder.Entity("ProjectManagementTool.Domain.Model.TeamLeader", b =>
                {
                    b.Property<Guid>("TeamLeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JwtUserToken")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("TeamLeaderName")
                        .HasColumnType("text");

                    b.Property<string>("TeamLeaderPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TeamLeaderId");

                    b.HasIndex("TeamLeaderName")
                        .IsUnique();

                    b.ToTable("TeamLeader");
                });
#pragma warning restore 612, 618
        }
    }
}
